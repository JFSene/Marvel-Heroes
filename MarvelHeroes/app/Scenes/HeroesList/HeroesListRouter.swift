//
//  HeroesListRouter.swift
//  MarvelHeroes
//
//  Created by Joel Sene on 29/01/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol HeroesListRoutingLogic
{
    func routeToHeroDetails(segue: UIStoryboardSegue?)
}

protocol HeroesListDataPassing
{
    var dataStore: HeroesListDataStore? { get }
}

class HeroesListRouter: NSObject, HeroesListRoutingLogic, HeroesListDataPassing
{
    weak var viewController: HeroesListViewController?
    var dataStore: HeroesListDataStore?
    
    // MARK: Routing
    
    func routeToHeroDetails(segue: UIStoryboardSegue?){
        if let segue = segue {
            let destination = segue.destination as? HeroDetailsViewController
            var heroDetailsDataStore = destination?.router?.dataStore
            passDataToHeroDetails(source: dataStore!, destination: &(heroDetailsDataStore)!)
        } else {
            let storyboard = UIStoryboard(name: "HeroDetails", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "HeroDetailsViewController") as! HeroDetailsViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToHeroDetails(source: dataStore!, destination: &destinationDS)
            navigateToHeroDetails(source: viewController!, destination: destinationVC)
        }
    }
    
    
    // MARK: Navigation
    
    func navigateToHeroDetails(source: HeroesListViewController, destination: HeroDetailsViewController)
    {
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    
    func passDataToHeroDetails(source: HeroesListDataStore, destination: inout HeroDetailsDataStore)
    {
        guard let selectedHeroRow = viewController?.tableView.indexPathForSelectedRow?.row else { return }
        let selectedHero = viewController?.dataSource?.heroList[selectedHeroRow]
        destination.hero = selectedHero
    }
}
